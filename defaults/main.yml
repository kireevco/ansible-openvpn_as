---
# defaults file for openvpn_as

openvpn_as_version: 2.1.2

openvpn_as_ubuntu_trusty_sha256sum: d9d539e7a497ed36a15100a8f24e4fcb42b98581bfc5d79e0bb07b7e4c4a608b
openvpn_as_ubuntu_xenial_sha256sum: f00cf38d9fb51beb66ddb9d67b508952d9170b6d94e821465a09d58fb14ce475

openvpn_as_password: $6$j8B0A1aiU$53BF5A6qO74IDJWTDqgaafnBar1c.LOKK7sdBxwXJY/K/I/XUFAWNsfm78dI9YBDPTHJlmaZoE.QFg.3DEobO1

openvpn_as_directory: /usr/local/openvpn_as
openvpn_as_admin_ui_https_ip_address: "{{ ansible_default_ipv4.address }}"
openvpn_as_admin_ui_https_port: 943
openvpn_as_external_pki_enabled: false

openvpn_as_connect: "true"
openvpn_as_auth_module_type: "pam"
openvpn_as_cs_admin_only: "false"
openvpn_as_cs_auto_generate: "true"
openvpn_as_cs_cws_ui_offer_android: "true"
openvpn_as_cs_cws_ui_offer_autologin: "true"
openvpn_as_cs_cws_ui_offer_ios: "true"
openvpn_as_cs_cws_ui_offer_linux: "true"
openvpn_as_cs_cws_ui_offer_mac: "true"
openvpn_as_cs_cws_ui_offer_server_locked: "false"
openvpn_as_cs_cws_ui_offer_user_locked: "true"
openvpn_as_cs_cws_ui_offer_win: "true"
openvpn_as_cs_https_ip_address: "{{ ansible_default_ipv4.address }}"
openvpn_as_cs_https_port: 943
openvpn_as_cs_ssl_reneg: "false"
openvpn_as_cs_tls_version_min: 1.0


openvpn_as_external_pki_cn_username_requirement: "true"
openvpn_as_external_pki_ca_cert:
openvpn_as_external_pki_server_cert:
openvpn_as_external_pki_server_key:
openvpn_as_external_pki_ta_key:
openvpn_as_external_pki_dh_key:
openvpn_as_external_pki_tls_static_key:

openvpn_as_etc_directory: "{{ openvpn_as_directory }}/etc"
openvpn_as_scripts_directory: "{{ openvpn_as_directory }}/scripts"
openvpn_as_pki_directory: "{{ openvpn_as_directory }}/pki"

openvpn_as_external_pki_server_cert_filename: "{{ openvpn_as_pki_directory }}/server.crt"
openvpn_as_external_pki_server_key_filename: "{{ openvpn_as_pki_directory }}/server.key"
openvpn_as_external_pki_ca_cert_filename: "{{ openvpn_as_pki_directory }}/ca.crt"
openvpn_as_external_pki_ta_key_filename: "{{ openvpn_as_pki_directory }}/ta.key"
openvpn_as_external_pki_dh_key_filename: "{{ openvpn_as_pki_directory }}/dh.key"
openvpn_as_external_pki_autologin_x509_spec: "role,,AUTOLOGIN"
openvpn_as_external_pki_remote_cert_usage: ns


openvpn_as_host_name: "{{ ansible_default_ipv4.address }}"

openvpn_as_iptables_append: "false"
openvpn_as_iptables_web: "true"
openvpn_as_iptables_vpn_disable_filter: "false"
openvpn_as_iptables_vpn_disable_mangle: "false"
openvpn_as_iptables_vpn_disable_nat: "false"

openvpn_as_sa_company_name: OpenVPN Technologies, Inc.
openvpn_as_sa_logo_image_file: ''
openvpn_as_sa_show_c2s_routes: "true"
openvpn_as_sa_ssl_lib: 'openssl'

openvpn_as_vpn_client_config_directives: []
openvpn_as_vpn_client_routing_inter_client: "false"
openvpn_as_vpn_client_routing_reroute_dns: "false"
openvpn_as_vpn_client_routing_reroute_gw: "false"
openvpn_as_vpn_client_routing_superuser_c2c_access: "false"

openvpn_as_vpn_daemons:
  - client_netmask_bits: 20
    client_network: 172.27.224.0
    listen_ip_address: "{{ ansible_default_ipv4.address }}"
    listen_port: 443
    listen_protocol: tcp
    server_ip_address: "{{ ansible_default_ipv4.address }}"

openvpn_as_vpn_general_osi_layer: 3

openvpn_as_vpn_server_config_directives: []
openvpn_as_vpn_server_daemon_enable: "true"
openvpn_as_vpn_server_daemon_tcp_port: 943
openvpn_as_vpn_server_daemon_udp_port: 1194
openvpn_as_vpn_server_dhcp_option_adapter_domain_suffix: ''
openvpn_as_vpn_server_dhcp_option_dns: []

openvpn_as_vpn_server_dhcp_option_domains: []
openvpn_as_vpn_server_duplicate_cn: "true"
openvpn_as_vpn_server_google_auth_enable: "false"
openvpn_as_vpn_server_group_pool:
  - 172.27.240.0/20
openvpn_as_vpn_server_routing_allow_private_nets_to_clients: "true"
openvpn_as_vpn_server_routing_gateway_access: "true"
openvpn_as_vpn_server_routing_private_access: nat
openvpn_as_vpn_server_routing_private_networks: []
openvpn_as_vpn_server_routing_routed_subnets: []
openvpn_as_vpn_server_static: []
#  - netmask_bits: 27
#    network: 172.27.222.0
openvpn_as_vpn_server_tls_version_min: default
openvpn_as_vpn_server_tls_auth: "true"
openvpn_as_vpn_tls_refresh_interval: 360

openvpn_as_xmlrpc_relay_level: 1


# Uncomment this is you would like to use yaml-style config
#openvpn_as_config:
#  Default: "{{ openvpn_as_config_default_profile | from_yaml }}"
#  _INTERNAL:
#    run_api.active_profile: Default
#    webui.edit_profile: Default


openvpn_as_config_default_profile: |
  admin_ui.https.ip_address: "{{ openvpn_as_admin_ui_https_ip_address }}"
  admin_ui.https.ip_address: "{{ openvpn_as_admin_ui_https_ip_address }}"
  admin_ui.https.port: "{{ openvpn_as_admin_ui_https_port }}"
  auth.ldap.0.name: "My LDAP servers"
  auth.ldap.0.ssl_verify: "never"
  auth.ldap.0.timeout: "4"
  auth.ldap.0.use_ssl: "never"
  auth.module.type: "{{ openvpn_as_auth_module_type }}"
  auth.pam.0.service: "openvpnas"
  auth.radius.0.acct_enable: "false"
  auth.radius.0.name: "My Radius servers"
  cs.admin_only: "{{ openvpn_as_cs_admin_only }}"
  cs.cws_proto_v2: "true"
  cs.cws_ui_offer.android: "{{ openvpn_as_cs_cws_ui_offer_android  }}"
  cs.cws_ui_offer.autologin: "{{ openvpn_as_cs_cws_ui_offer_autologin }}"
  cs.cws_ui_offer.ios: "{{ openvpn_as_cs_cws_ui_offer_ios }}"
  cs.cws_ui_offer.linux: "{{ openvpn_as_cs_cws_ui_offer_linux }}"
  cs.cws_ui_offer.mac: "{{ openvpn_as_cs_cws_ui_offer_mac }}"
  cs.cws_ui_offer.server_locked: "{{ openvpn_as_cs_cws_ui_offer_server_locked }}"
  cs.cws_ui_offer.user_locked: "{{ openvpn_as_cs_cws_ui_offer_user_locked }}"
  cs.cws_ui_offer.win: "{{ openvpn_as_cs_cws_ui_offer_win }}"
  cs.https.ip_address: "{{ openvpn_as_cs_https_ip_address }}"
  cs.https.port: "{{ openvpn_as_cs_https_port }}"
  cs.prof_sign_web: "true"
  cs.ssl_method: "SSLv3"
  cs.ssl_reneg: "{{ openvpn_as_cs_ssl_reneg }}"
  cs.tls_version_min: "{{ openvpn_as_cs_tls_version_min }}"

  external_pki.cn_username_requirement: "{{ openvpn_as_external_pki_cn_username_requirement }}"
  external_pki.server_crt: "{{ openvpn_as_external_pki_server_cert | regex_replace ('\n', '\\n') }}"
  external_pki.server_key: "{{ openvpn_as_external_pki_server_key | regex_replace ('\n', '\\n') }}"
  external_pki.ca_crt: "{{ openvpn_as_external_pki_ca_cert | regex_replace ('\n', '\\n') }}"
  external_pki.ta_key: "{{ openvpn_as_external_pki_ta_key | regex_replace ('\n', '\\n') }}"
  external_pki.dh_pem: "{{ openvpn_as_external_pki_dh_key | regex_replace  ('\n', '\\n') }}"
  external_pki.autologin_x509_spec: "{{ openvpn_as_external_pki_autologin_x509_spec }}"
  external_pki.remote_cert_usage: "{{ openvpn_as_external_pki_remote_cert_usage }}"

  host.name: "{{ openvpn_as_host_name }}"
  iptables.append: "{{ openvpn_as_iptables_append }}"
  iptables.vpn.disable.filter: "{{ openvpn_as_iptables_vpn_disable_filter }}"
  iptables.vpn.disable.mangle: "{{ openvpn_as_iptables_vpn_disable_mangle }}"
  iptables.vpn.disable.nat: "{{ openvpn_as_iptables_vpn_disable_nat }}"
  sa.initial_run_groups.0: "web_group"
  sa.initial_run_groups.1: "openvpn_group"
  sa.ssl_lib: "{{ openvpn_as_sa_ssl_lib }}"

  vpn.client.config_text: "{{ ( openvpn_as_vpn_client_config_directives | join('\n') ) }}"

  vpn.client.routing.inter_client: "{{ openvpn_as_vpn_client_routing_inter_client }}"
  vpn.client.routing.reroute_dns: "{%- if openvpn_as_vpn_client_routing_reroute_dns == 'true' and (openvpn_as_vpn_server_dhcp_option_dns_0 != '' or openvpn_as_vpn_server_dhcp_option_dns_1 != '') -%}custom{%- elif openvpn_as_vpn_client_routing_reroute_dns == 'true' -%}true{%- else -%}false{%- endif -%}"
  vpn.client.routing.reroute_gw: "{{ openvpn_as_vpn_client_routing_reroute_gw }}"
  vpn.client.routing.superuser_c2c_access: "{{ openvpn_as_vpn_client_routing_superuser_c2c_access }}"
  vpn.general.osi_layer: "{{ openvpn_as_vpn_general_osi_layer }}"

  {% for daemon in openvpn_as_vpn_daemons %}
  vpn.daemon.{{ loop.index0 }}.client.netmask_bits: "{{ daemon.client_netmask_bits }}"
  vpn.daemon.{{ loop.index0 }}.client.network: "{{ daemon.client_network }}"
  vpn.daemon.{{ loop.index0 }}.listen.ip_address: "{{ daemon.listen_ip_address }}"
  vpn.daemon.{{ loop.index0 }}.listen.port: "{{ daemon.listen_port }}"
  vpn.daemon.{{ loop.index0 }}.listen.protocol: "{{ daemon.listen_protocol }}"
  vpn.daemon.{{ loop.index0 }}.server.ip_address: "{{ daemon.server_ip_address }}"
  {% endfor %}
  vpn.server.config_text: "{{ ( openvpn_as_vpn_server_config_directives | join('\n') ) }}"
  vpn.server.daemon.enable: "{{ openvpn_as_vpn_server_daemon_enable }}"
  vpn.server.daemon.tcp.n_daemons: "1"
  vpn.server.daemon.tcp.port: "{{ openvpn_as_vpn_server_daemon_tcp_port }}"
  vpn.server.daemon.udp.n_daemons: "1"
  vpn.server.daemon.udp.port: "{{ openvpn_as_vpn_server_daemon_udp_port }}"

  {% if openvpn_as_vpn_server_dhcp_option_adapter_domain_suffix %}
  vpn.server.dhcp_option.adapter_domain_suffix: "{{ openvpn_as_vpn_server_dhcp_option_adapter_domain_suffix | default ('') }}"
  {% endif %}

  {% for dns in openvpn_as_vpn_server_dhcp_option_dns %}
  vpn.server.dhcp_option.dns.{{ loop.index0 }}: "{{ dns }}"
  {% endfor %}

  vpn.server.dhcp_option.domain: "{{ openvpn_as_vpn_server_dhcp_option_domains | join(',') }}"
  vpn.server.duplicate_cn: "{{ openvpn_as_vpn_server_duplicate_cn }}"
  vpn.server.google_auth.enable: "{{ openvpn_as_vpn_server_google_auth_enable }}"

  {% for pool in openvpn_as_vpn_server_group_pool %}
  vpn.server.group_pool.{{ loop.index0 }}: "{{ pool }}"
  {% endfor %}

  vpn.server.port_share.enable: "false"
  vpn.server.routing.allow_private_nets_to_clients: "{{ openvpn_as_vpn_server_routing_allow_private_nets_to_clients }}"
  vpn.server.routing.gateway_access: "{{ openvpn_as_vpn_server_routing_gateway_access }}"
  vpn.server.routing.private_access: "{{ openvpn_as_vpn_server_routing_private_access }}"

  {% for network in openvpn_as_vpn_server_routing_private_networks %}
  vpn.server.routing.private_network.{{ loop.index0 }}: "{{ network }}"
  {% endfor %}

  {% for subnet in openvpn_as_vpn_server_routing_routed_subnets %}
  vpn.server.routing.routed_subnets.{{ loop.index0 }}: "{{ subnet }}"
  {% endfor %}

  {% for static in openvpn_as_vpn_server_static %}
  vpn.server.static.{{ loop.index0 }}.netmask_bits: "{{ static.netmask_bits }}"
  vpn.server.static.{{ loop.index0 }}.network: "{{ static.network }}"
  {% endfor %}
  vpn.server.tls_auth: "{{ openvpn_as_vpn_server_tls_auth }}"
  vpn.server.tls_version_min: "{{ openvpn_as_vpn_server_tls_version_min }}"
  vpn.tls_refresh.do_reauth: "true"
  vpn.tls_refresh.interval: "{{ openvpn_as_vpn_tls_refresh_interval }}"
  xmlrpc.relay_level: "{{ openvpn_as_xmlrpc_relay_level }}"




openvpn_as_system_config:
  AS_CONNECT: "true"
  #DEBUG=false
  AS_CONNECT: "{{ openvpn_as_connect }}"
  tmp_dir: ~/tmp
  lic.dir: ~/licenses
  run_start_retry.give_up: 60
  run_start_retry.resample: 10
  sa.show_c2s_routes: "{{ openvpn_as_sa_show_c2s_routes }}"
  certs_db: sqlite:///~/db/certs.db
  user_prop_db: sqlite:///~/db/userprop.db
  config_db: sqlite:///~/db/config.db
  log_db: sqlite:///~/db/log.db
  db_retry.interval: 1
  db_retry.n_attempts: 6
#  db_startup_wait: 10
  node_type: PRIMARY
  boot_pam_service: openvpnas
  boot_pam_users.0: openvpn
  system_users_local.0: root
  system_users_local.1: openvpn_as
  cs.user: openvpn_as
  cs.group: openvpn_as
  general.sock_dir: ~/sock
#  general.openvpn_exe_path:
  sa.win_exe_dir: ~/exe
  sa.company_name: "{{ openvpn_as_sa_company_name }}"
#  sa.logo_image_file: "{{ openvpn_as_sa_logo_image_file if openvpn_as_sa_logo_image_file != '' else '' }}"

  sa.sock: ~/sock/sagent
  cs.auto_generate: "{{ openvpn_as_cs_auto_generate  }}"
  cs.ca_bundle: ~/web-ssl/ca.crt
  cs.priv_key: ~/web-ssl/server.key
  cs.cert: ~/web-ssl/server.crt
  cs.dynamic_port_base: 870
  sa.initial_run_groups.0: web_group
  sa.reactor: epoll
  sa.unit: 0
  iptables.web: "{{ openvpn_as_iptables_web }}"
  vpn.server.user: openvpn_as
  vpn.server.group: openvpn_as
